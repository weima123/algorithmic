/**
 * @author : mawei
 * @description :
 * @since : 2018/9/18
 */
package com.algo.divide_and_conquer;
/*
一.棋盘覆盖问题思路
        1.思路一
        2^k*2^k的棋盘，先分成相等的四块子棋盘，其中特殊放歌位于四个中的一个，构造剩下没特殊方格的三个自棋盘，将他们中的一个也假设为特殊方格。如果是：
        1)左上的子棋盘(若不存在特殊方格)则将该子棋盘右下角的那个方格设置为特殊方格。
        2)右上的子棋盘(若不存在特殊方格)则将该子棋盘左下角的方格设置为特殊方格。
        3)左下的子棋盘(若不存在特殊方格)则将该子棋盘左下角的方格设置为特殊方格。
        4)右下角的子棋盘(若不存在特殊方格)则将该自棋盘右上角的方格设置为特殊方格。
        当然上面四种,只可能且必定三个成立，那三个假设的特殊方格刚好构成一个L型骨架，我们可以给他们作上相同的标记。这样四个子棋盘就分别都和原来的大棋盘类似，我们就可以用递归算法解决。

        2.思路二
        (1)把棋盘等分成四个正方形分别是：左上、左下、右上、右下 四个子棋盘。
        (2)对于每一个子棋盘，如果其存在特殊方格，将它再分成四个子棋盘，并且使用同样的方法，对子棋盘进行递归。
        (3)对于不存在特殊方格的子棋盘，假定与另外三个子棋盘相接的为特殊方格，有了特殊方格之后，对这个子棋盘进行递归
        (4)直到子棋盘为1*1的正方形。

        */
